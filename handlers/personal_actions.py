from aiogram import types
from dispatcher import dp

import config
import re
from bot import BotDB

@dp.message_handler(commands = "start")
async def start(message: types.Message):
    if(not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)

    await message.bot.send_message(message.from_user.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! \n –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /help")

@dp.message_handler(commands = ("spend", "earn", "s", "e"), commands_prefix = "/!")
async def start(message: types.Message):
    cmd_variants = (('/spend', '/s', '!spend', '!s'), ('/earn', '/e', '!earn', '!e'))
    operation = '-' if message.text.startswith(cmd_variants[0]) else '+'
    regex = message.text
    sou = re.split(' ', regex)
    source = sou[2]
    value = message.text
    for i in cmd_variants:
        for j in i:
            value = value.replace(j, '').strip()

    if(len(value)):
        x = re.findall(r"\d+(?:.\d+)?", value)
        if(len(x)):
            value = float(x[0].replace(',', '.'))

            BotDB.add_record(message.from_user.id, operation, value, source)

            if(operation == '-'):
                await message.reply("‚úÖ –ó–∞–ø–∏—Å—å –æ <u><b>—Ä–∞—Å—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")
            else:
                await message.reply("‚úÖ –ó–∞–ø–∏—Å—å –æ <u><b>–¥–æ—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")
        else:
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—É–º–º—É!")
    else:
        await message.reply("–ù–µ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞!")

@dp.message_handler(commands = ("history", "h"), commands_prefix = "/!")
async def start(message: types.Message):
    cmd_variants = ('/history', '/h', '!history', '!h')
    within_als = {
        "day": ('today', 'day', '—Å–µ–≥–æ–¥–Ω—è', '–¥–µ–Ω—å'),
        "month": ('month', '–º–µ—Å—è—Ü'),
        "year": ('year', '–≥–æ–¥'),
    }

    cmd = message.text
    for r in cmd_variants:
        cmd = cmd.replace(r, '').strip()

    within = 'day'
    if(len(cmd)):
        for k in within_als:
            for als in within_als[k]:
                if(als == cmd):
                    within = k

    records = BotDB.get_records(message.from_user.id, within)
    balance = 0
    if(len(records)):
        answer = f"üïò –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ {within_als[within][-1]}\n\n"

        for r in records:
            answer += "<b>" + ("‚ûñ –†–∞—Å—Ö–æ–¥" if not r[2] else "‚ûï –î–æ—Ö–æ–¥") + "</b>"
            answer += f" - {r[3]}"
            answer += f" <i>({r[4]})</i>"
            answer += f"{r[5]}\n"
            if not r[2]:
                balance = balance - r[3]
            else:
                balance = balance + r[3]
        answer += f"\n–ë–∞–ª–∞–Ω—Å: {balance}\n"
        await message.reply(answer)
    else:
        await message.reply("–ó–∞–ø–∏—Å–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")

@dp.message_handler(commands=("balance", "b"), commands_prefix="/!")
async def start(message: types.Message):
    cmd_variants = ('/balance', '/b', '!balance', '!b')
    balance = 0
    records = BotDB.get_records(message.from_user.id)
    if (len(records)):
        for r in records:
            if not r[2]:
                balance = balance - r[3]
            else:
                balance = balance + r[3]
        await message.reply(balance)

@dp.message_handler(commands=("help"), commands_prefix="/!")
async def start(message: types.Message):
    cmd_variants = ('/help', '!help')

    await message.reply("<b>–í–≤–æ–¥ —Ä–∞—Å—Ö–æ–¥–∞:</b> /spend [—Å—É–º–º–∞] [–ø—Ä–∏—á–∏–Ω–∞] <b>–∏–ª–∏</b> /s [—Å—É–º–º–∞] [–ø—Ä–∏—á–∏–Ω–∞]\n"
                        "<b>–í–≤–æ–¥ –¥–æ—Ö–æ–¥–∞:</b> /earn [—Å—É–º–º–∞] [–∏—Å—Ç–æ—á–Ω–∏–∫] <b>–∏–ª–∏</b> /e [c—É–º–º–∞] [–∏—Å—Ç–æ—á–Ω–∏–∫]\n"
                        "<b>–í—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞ –¥–µ–Ω—å/–º–µ—Å—è—Ü/–≥–æ–¥:</b> /history day/month/year <b>–∏–ª–∏</b> /h day/month/year\n"
                        "<b>–í—ã–≤–æ–¥ –±–∞–ª–∞–Ω—Å–∞:</b> /balance <b>–∏–ª–∏</b> /b\n"
                        "<b>–û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª:</b> /clear <b>–∏–ª–∏</b> /c")


@dp.message_handler(commands=("clear", "c"), commands_prefix="/!")
async def start(message: types.Message):
    cmd_variants = (('/clear', '/c', '!clear', '!c'))

    clear = BotDB.delete_records(message.from_user.id)
    await message.reply("–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω!")